{"version":3,"sources":["constants.js","features/fretboard/Fret.js","features/fretboard/String.js","features/fretboard/Legend.js","features/controls/controlSlice.js","features/fretboard/Fretboard.js","features/controls/ControlPanel.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["TUNINGS","Standard","C6","DADGAD","FACGCE","Cabbage","Custom","NOTE_ORDER_FLATS","NOTE_ORDER_SHARPS","ALL_VALID_NOTE_INPUTS","Fret","props","notes","useSelector","state","controls","useState","baseNoteValid","setBaseNoteValid","overrideColour","bgColour","setBgColour","isSelected","children","onBaseNoteChange","value","onNoteChange","style","backgroundColor","height","width","border","color","fontWeight","display","justifyContent","alignItems","editable","Item","marginBottom","validateStatus","placeholder","bordered","textAlign","onChange","e","target","includes","substring","toUpperCase","onBlur","onPressEnter","String","noteOrder","useFlats","startingNote","index","indexOf","frets","i","push","key","length","title","placement","defaultVisible","showEditableHelp","Legend","flats","colour","A","B","C","D","E","F","G","sharps","COLOUR_POOL","controlSlice","createSlice","name","initialState","currColourIndex","tuning","reducers","toggleNote","action","note","payload","newState","newColour","newColourIndex","clearNotes","toggleUseFlats","notesToUse","updateTuning","updateCustomTuning","tuningArray","split","trim","replace","charAt","newTuning","join","actions","Fretboard","dispatch","useDispatch","strings","map","onCustomBaseNoteChange","reverse","Paragraph","Typography","Option","Select","ControlPanel","showSharpFlatToggle","setShowSharpFlatToggle","noteControls","Object","keys","span","expandControls","onClick","dispatchToggleNote","checked","margin","defaultValue","level","checkedChildren","unCheckedChildren","Title","Header","Layout","Sider","Content","App","showControls","setShowControls","className","collapsible","onCollapse","console","log","marginTop","configureStore","reducer","controlReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.763390d2.chunk.js","sourcesContent":["export const FLAT = \"♭\";\r\nexport const SHARP = \"♯\";\r\n\r\nexport const TUNINGS = {\r\n  Standard: \"E,A,D,G,B,E\",\r\n  \"Open G\": \"D,G,D,G,B,D\",\r\n  \"Open D\": `D,A,D,F${SHARP},A,D`,\r\n  C6: \"C,A,C,G,C,E\",\r\n  DADGAD: \"D,A,D,G,A,D\",\r\n  FACGCE: \"F,A,C,G,C,E\",\r\n  Cabbage: `C,A,B${FLAT},A,G,E`,\r\n  Custom: \",,,,,\",\r\n};\r\n\r\nexport const NOTE_ORDER_FLATS = [\r\n  \"A♭\",\r\n  \"A\",\r\n  \"B♭\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D♭\",\r\n  \"D\",\r\n  \"E♭\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G♭\",\r\n  \"G\",\r\n];\r\n\r\nexport const NOTE_ORDER_SHARPS = [\r\n  \"A\",\r\n  \"A♯\",\r\n  \"B\",\r\n  \"C\",\r\n  \"C♯\",\r\n  \"D\",\r\n  \"D♯\",\r\n  \"E\",\r\n  \"F\",\r\n  \"F♯\",\r\n  \"G\",\r\n  \"G♯\",\r\n];\r\n\r\nexport const ALL_VALID_NOTE_INPUTS = [\r\n  \"Ab\",\r\n  \"A\",\r\n  \"Bb\",\r\n  \"B\",\r\n  \"C\",\r\n  \"Db\",\r\n  \"D\",\r\n  \"Eb\",\r\n  \"E\",\r\n  \"F\",\r\n  \"Gb\",\r\n  \"G\",\r\n  \"A\",\r\n  \"A#\",\r\n  \"B\",\r\n  \"C\",\r\n  \"C#\",\r\n  \"D\",\r\n  \"D#\",\r\n  \"E\",\r\n  \"F\",\r\n  \"F#\",\r\n  \"G\",\r\n  \"G#\",\r\n]","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Input, Form } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ALL_VALID_NOTE_INPUTS } from \"../../constants\";\r\n\r\nconst DEFAULT_BG_COLOUR = \"#f6ffed\";\r\nconst DEFAULT_ERR_COLOUR = \"#ff4d4f\";\r\nconst DEFAULT_BORDER_COLOUR = \"#d9f7be\";\r\n\r\nexport function Fret(props) {\r\n  const { notes } = useSelector((state) => state.controls);\r\n\r\n  const [baseNoteValid, setBaseNoteValid] = useState(true);\r\n  const [bgColour, setBgColour] = useState(\r\n    props.overrideColour ? props.overrideColour : DEFAULT_BG_COLOUR\r\n  );\r\n\r\n  const isSelected = notes[props.children]\r\n    ? notes[props.children][\"state\"]\r\n    : false;\r\n\r\n  const validateBaseNote = (value) => {\r\n    if (\r\n      !ALL_VALID_NOTE_INPUTS.includes(\r\n        value.substring(0, 1).toUpperCase() + value.substring(1)\r\n      )\r\n    ) {\r\n      setBaseNoteValid(false);\r\n      setBgColour(DEFAULT_ERR_COLOUR);\r\n    } else {\r\n      setBaseNoteValid(true);\r\n      setBgColour(\r\n        props.overrideColour ? props.overrideColour : DEFAULT_BG_COLOUR\r\n      );\r\n    }\r\n  };\r\n\r\n  const onBaseNoteChange = (value) => {\r\n    if (baseNoteValid) {\r\n      props.onNoteChange(value);\r\n    }\r\n  };\r\n\r\n  // TODO: break out editable fret into its own component\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: isSelected\r\n          ? notes[props.children][\"colour\"]\r\n          : bgColour,\r\n        height: \"50px\",\r\n        width: props.width,\r\n        border: `1px ${DEFAULT_BORDER_COLOUR} solid`,\r\n        color: isSelected || props.overrideColour != null ? \"white\" : \"black\",\r\n        fontWeight: \"bold\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {props.editable ? (\r\n        <Form>\r\n          <Form.Item\r\n            style={{ marginBottom: 0 }}\r\n            validateStatus={baseNoteValid ? \"success\" : \"error\"}\r\n          >\r\n            <Input\r\n              placeholder=\"?\"\r\n              bordered={false}\r\n              value={props.children}\r\n              style={{\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              onChange={(e) => validateBaseNote(e.target.value)}\r\n              onBlur={(e) => onBaseNoteChange(e.target.value)}\r\n              onPressEnter={(e) => onBaseNoteChange(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nFret.propTypes = {\r\n  overrideColour: PropTypes.string,\r\n  width: PropTypes.string,\r\n  editable: PropTypes.bool,\r\n  onNoteChange: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fret } from \"./Fret\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NOTE_ORDER_SHARPS, NOTE_ORDER_FLATS } from \"../../constants\";\r\n\r\nconst NUM_FRETS = 21;\r\nconst BASE_FRET_WIDTH = 60;\r\n\r\nexport function String(props) {\r\n  const { useFlats } = useSelector((state) => state.controls);\r\n\r\n  let noteOrder =\r\n    useFlats ||\r\n    (props.startingNote.includes(\"♭\") && !props.startingNote.includes(\"♯\"))\r\n      ? NOTE_ORDER_FLATS\r\n      : NOTE_ORDER_SHARPS;\r\n  let index = noteOrder.indexOf(props.startingNote);\r\n  let frets = [];\r\n\r\n  for (let i = 0; i <= NUM_FRETS; i++) {\r\n    if (props.startingNote !== \"\") {\r\n      // A base note is defined; render string\r\n      if (i === 0) {\r\n        frets.push(\r\n          <Fret\r\n            key={`${noteOrder[index]}-${i}`}\r\n            overrideColour=\"#262626\"\r\n            width={`${BASE_FRET_WIDTH - i}px`}\r\n          >\r\n            {noteOrder[index]}\r\n          </Fret>\r\n        );\r\n      } else {\r\n        frets.push(\r\n          <Fret\r\n            key={`${noteOrder[index]}-${i}`}\r\n            width={`${BASE_FRET_WIDTH - i}px`}\r\n          >\r\n            {noteOrder[index]}\r\n          </Fret>\r\n        );\r\n      }\r\n\r\n      if (index === noteOrder.length - 1) {\r\n        index = 0;\r\n      } else {\r\n        index++;\r\n      }\r\n    } else {\r\n      // Custom tuning was selected; render input at base and empty frets following it\r\n      if (i === 0) {\r\n        frets.push(\r\n          <Tooltip\r\n            title=\"Enter a note here\"\r\n            placement=\"right\"\r\n            defaultVisible={props.showEditableHelp}\r\n            key={i}\r\n          >\r\n            <Fret\r\n              key={i}\r\n              overrideColour=\"#262626\"\r\n              width={`${BASE_FRET_WIDTH - i}px`}\r\n              editable={true}\r\n              onNoteChange={props.onBaseNoteChange}\r\n            >\r\n              {noteOrder[index]}\r\n            </Fret>\r\n          </Tooltip>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return <div style={{ display: \"flex\" }}>{frets}</div>;\r\n}\r\n\r\nString.propTypes = {\r\n  startingNote: PropTypes.string,\r\n  showEditableHelp: PropTypes.bool,\r\n  onBaseNoteChange: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Fret } from \"./Fret\";\r\n\r\n\r\nexport function Legend(props) {\r\n  // Could render in a loop, but I _think_ this might be more efficient for re-rendering\r\n  // Hopefully, this should never need to be changed......\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Fret overrideColour=\"#262626\" width={\"60px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"59px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"58px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"57px\"}>III</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"56px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"55px\"}>V</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"54px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"53px\"}>VII</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"52px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"51px\"}>IX</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"50px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"49px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"48px\"}>XII</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"47px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"46px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"45px\"}>XV</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"44px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"43px\"}>XVII</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"42px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"41px\"}>XIX</Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"40px\"}></Fret>\r\n      <Fret overrideColour=\"#262626\" width={\"39px\"}>XXI</Fret>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { SHARP, FLAT } from \"../../constants\";\r\n\r\nconst flats = {\r\n  \"A♭\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  A: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"B♭\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  B: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  C: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"D♭\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  D: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"E♭\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  E: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  F: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"G♭\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  G: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n};\r\n\r\nconst sharps = {\r\n  A: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"A♯\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  B: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  C: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"C♯\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  D: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"D♯\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  E: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  F: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"F♯\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  G: {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n  \"G♯\": {\r\n    state: false,\r\n    colour: \"\",\r\n  },\r\n};\r\n\r\nconst RED = \"#f5222d\";\r\nconst VOLCANO = \"#fa541c\";\r\nconst LIGHT_ORANGE = \"#ffc069\";\r\nconst GOLD = \"#faad14\";\r\nconst YELLOW = \"#fadb14\";\r\nconst LIME = \"#a0d911\";\r\nconst DARK_GREEN = \"#135200\";\r\nconst CYAN = \"#13c2c2\";\r\nconst LIGHT_BLUE = \"#91d5ff\";\r\nconst ELECTRIC_BLUE = \"#1d39c4\";\r\nconst PURPLE = \"#722ed1\";\r\nconst MAGENTA = \"#eb2f96\";\r\n\r\nconst COLOUR_POOL = [\r\n  RED,\r\n  ELECTRIC_BLUE,\r\n  LIME,\r\n  VOLCANO,\r\n  PURPLE,\r\n  DARK_GREEN,\r\n  LIGHT_ORANGE,\r\n  CYAN,\r\n  GOLD,\r\n  MAGENTA,\r\n  YELLOW,\r\n  LIGHT_BLUE,\r\n];\r\n\r\nexport const controlSlice = createSlice({\r\n  name: \"controls\",\r\n  initialState: {\r\n    useFlats: false,\r\n    currColourIndex: 0,\r\n    tuning: \"E,A,D,G,B,E\",\r\n    notes: {\r\n      ...sharps,\r\n    },\r\n  },\r\n\r\n  reducers: {\r\n    toggleNote: (state, action) => {\r\n      const note = action.payload.toUpperCase();\r\n\r\n      const newState = !state[\"notes\"][note][\"state\"];\r\n      const newColour = newState ? COLOUR_POOL[state.currColourIndex] : \"\";\r\n      const newColourIndex = newState\r\n        ? state.currColourIndex + 1\r\n        : state.currColourIndex - 1;\r\n\r\n      return {\r\n        ...state,\r\n        currColourIndex: newColourIndex,\r\n        notes: {\r\n          ...state.notes,\r\n          [note]: {\r\n            state: newState,\r\n            colour: newColour,\r\n          },\r\n        },\r\n      };\r\n    },\r\n\r\n    clearNotes: (state) => {\r\n      const notes = state.useFlats ? flats : sharps;\r\n\r\n      return {\r\n        ...state,\r\n        currColourIndex: 0,\r\n        notes,\r\n      };\r\n    },\r\n\r\n    toggleUseFlats: (state) => {\r\n      const useFlats = !state.useFlats;\r\n      let notesToUse = useFlats ? flats : sharps;\r\n\r\n      // TODO: map between flats and sharps so user doesn't have to re-select notes\r\n\r\n      return {\r\n        ...state,\r\n        currColourIndex: 0,\r\n        useFlats,\r\n        notes: {\r\n          ...notesToUse,\r\n        },\r\n      };\r\n    },\r\n\r\n    updateTuning: (state, action) => {\r\n      return {\r\n        ...state,\r\n        tuning: action.payload,\r\n      };\r\n    },\r\n\r\n    updateCustomTuning: (state, action) => {\r\n      const { index, note } = action.payload;\r\n      const tuningArray = state.tuning.split(\",\");\r\n\r\n      tuningArray[index] = note.trim().toUpperCase().replace(\"#\", SHARP);\r\n\r\n      if (note.length == 2 && note.charAt(1) === \"b\") {\r\n        // Don't want to replace the note \"b\" with \"♭\"\r\n        // e.g., \"bb\" should evaluate to \"B♭\", \"ab\" should evaluate to \"A♭\", etc.\r\n        tuningArray[index] = tuningArray[index].substring(0, 1) + FLAT;\r\n      }\r\n\r\n      const newTuning = tuningArray.join();\r\n\r\n      return {\r\n        ...state,\r\n        tuning: newTuning,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleNote,\r\n  clearNotes,\r\n  toggleUseFlats,\r\n  updateTuning,\r\n  updateCustomTuning,\r\n} = controlSlice.actions;\r\n\r\nexport default controlSlice.reducer;\r\n","import React from \"react\";\r\nimport { String } from \"./String\";\r\nimport { Legend } from \"./Legend\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCustomTuning } from \"../controls/controlSlice\";\r\n\r\nexport function Fretboard(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const tuning = props.tuning || \"E,A,D,G,B,E\";\r\n\r\n  const onCustomBaseNoteChange = (note, i) => {\r\n    dispatch(updateCustomTuning({ note, index: i }));\r\n  };\r\n\r\n  const strings = tuning\r\n    .split(\",\")\r\n    .map((note, i) => (\r\n      <String\r\n        startingNote={note}\r\n        key={`${note}-${i}`}\r\n        showEditableHelp={i === 5}\r\n        onBaseNoteChange={(note) => onCustomBaseNoteChange(note, i)}\r\n      />\r\n    ))\r\n    .reverse(); // by convention tunings are listed top-to-bottom, but we need to display bottom to top\r\n  return (\r\n    <div>\r\n      <Legend />\r\n      {strings}\r\n      <Legend />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Checkbox, Row, Col, Switch, Select, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  toggleNote,\r\n  clearNotes,\r\n  toggleUseFlats,\r\n  updateTuning,\r\n} from \"./controlSlice\";\r\n\r\nimport { TUNINGS } from \"../../constants\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport function ControlPanel(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { useFlats, notes } = useSelector((state) => state.controls);\r\n  const [showSharpFlatToggle, setShowSharpFlatToggle] = useState(true);\r\n\r\n  const dispatchToggleNote = (note) => {\r\n    dispatch(toggleNote(note));\r\n  };\r\n\r\n  const noteControls = Object.keys(notes).map((note, i) => {\r\n    return (\r\n      <Col\r\n        key={note}\r\n        span={props.expandControls ? 12 : 24}\r\n        style={{ textAlign: \"left\" }}\r\n      >\r\n        <Checkbox\r\n          style={{ color: \"white\" }}\r\n          value={note}\r\n          onClick={(e) => dispatchToggleNote(note)}\r\n          checked={notes[note][\"state\"]}\r\n        >\r\n          {note}\r\n        </Checkbox>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"0 16px\",\r\n        textAlign: \"left\",\r\n      }}\r\n    >\r\n      {props.expandControls ? (\r\n        <Row style={{ marginBottom: \"16px\" }}>\r\n          <Col span={24} style={{ textAlign: \"left\" }}>\r\n            <Paragraph style={{ color: \"white\" }}>Tuning:</Paragraph>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Select\r\n              defaultValue=\"Standard\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={(tuning) => {\r\n                if (tuning === \"Custom\") {\r\n                  setShowSharpFlatToggle(false);\r\n                } else {\r\n                  setShowSharpFlatToggle(true);\r\n                }\r\n\r\n                dispatch(updateTuning(TUNINGS[tuning]));\r\n              }}\r\n            >\r\n              {Object.keys(TUNINGS).map((tuning) => (\r\n                <Option key={tuning} value={tuning}>\r\n                  {tuning}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {showSharpFlatToggle ? (\r\n        <Row style={{ marginBottom: \"16px\" }}>\r\n          {props.expandControls ? (\r\n            <Col span={16}>\r\n              <Paragraph level={3} style={{ color: \"white\" }}>\r\n                Show Flats\r\n              </Paragraph>\r\n            </Col>\r\n          ) : null}\r\n          <Col span={8}>\r\n            <Switch\r\n              checkedChildren=\"♭\"\r\n              unCheckedChildren=\"♯\"\r\n              checked={useFlats}\r\n              onClick={(e) => dispatch(toggleUseFlats())}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      <Row style={{ marginBottom: \"16px\" }}>\r\n        {props.expandControls ? (\r\n          <Col span={24}>\r\n            <Paragraph style={{ color: \"white\" }}>Notes:</Paragraph>\r\n          </Col>\r\n        ) : null}\r\n        {noteControls}\r\n      </Row>\r\n      <Row style={{ marginBottom: \"16px\" }}>\r\n        <Col span={24}>\r\n          <Button\r\n            onClick={() => dispatch(clearNotes())}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Fretboard } from './features/fretboard/Fretboard';\r\nimport { ControlPanel } from './features/controls/ControlPanel';\r\nimport { useSelector } from \"react-redux\";\r\nimport './App.css';\r\n\r\nimport { Typography } from 'antd';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Title } = Typography;\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nfunction App() {\r\n  const { tuning } = useSelector((state) => state.controls);\r\n  const [showControls, setShowControls] = useState(true);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout style={{height: \"100vh\"}}>\r\n        <Header>\r\n          <Title level={1} style={{ color: \"white\" }}>GUITAR MAP</Title>\r\n        </Header>\r\n        <Layout>\r\n          <Sider\r\n            collapsible\r\n            onCollapse={() => {\r\n              console.log('collapse');\r\n              console.log(showControls);\r\n              setShowControls(!showControls)\r\n            }}\r\n          >\r\n            <ControlPanel expandControls={showControls} />\r\n          </Sider>\r\n          <Content style={{height: \"100%\"}}>\r\n            <div\r\n              className=\"container\"\r\n              style={{\r\n                marginTop: \"50px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Fretboard tuning={tuning || \"E,A,D,G,B,E\"}/>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport controlReducer from \"../features/controls/controlSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    controls: controlReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}